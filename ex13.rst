Exercise 13: Removing Documents
===============================

We've learned how to insert and update documents. But what if we want to remove documents from the database. Thankfully the ``collection`` has a method called ``remove`` that does exactly that. Let's see how it works.

.. literalinclude:: ex/ex37.js
    :language: javascript
    :linenos:

The result will be

.. code-block:: console
    :linenos:

    connected to database
    added document
    removed documents
    documents
    [ { _id: 3, user: 2, read: false } ]

Notice that it removed all the documents that matched ``{user:1}``. The default behavior of ``remove`` is to remove all the documents that match. But what if we only want to remove a single document. Luckily there is an option called ``single`` that allows us to do this. Let's see how it works.

.. literalinclude:: ex/ex38.js
    :language: javascript
    :linenos:

The result will be

.. code-block:: console
    :linenos:

    connected to database
    added document
    removed documents
    documents
    [ { _id: 2, user: 1, read: false },
      { _id: 3, user: 2, read: false } ]

That's all there is to removing document in ``MongoDB``. In the next couple of exercises we will start digging into how to query and use the data in ``MongoDB`` using the ``findOne``, ``find`` and ``stream`` functions.

.. NOTE::
    One thing you might wonder is how to remove all of the documents in a ``collection``. This is can be done in two ways. ``remove({}, function(err, result) {})`` or ``remove(function(err, result) {})``.